name: Deploy Web App to Vercel

on:
  push:
    branches: [main]
    paths:
      - "apps/web/**"
      - "packages/**"
      - "package.json"
      - "pnpm-lock.yaml"
  pull_request:
    branches: [main]
    paths:
      - "apps/web/**"
      - "packages/**"
      - "package.json"
      - "pnpm-lock.yaml"

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

jobs:
  test:
    name: Test Web App
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install

      - name: Type check
        run: |
          cd apps/web
          pnpm check-types

      - name: Lint code
        run: |
          cd apps/web
          pnpm lint

      - name: Build web app
        run: |
          cd apps/web
          pnpm build

  deploy:
    name: Deploy to Vercel
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install

      - name: Install Vercel CLI
        run: npm install --global vercel@latest

      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}

      - name: Build Project Artifacts
        run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}
        env:
          TURBO_TOKEN: ""
          TURBO_TEAM: ""

      - name: Deploy Project Artifacts to Vercel
        run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}

  preview:
    name: Deploy Preview to Vercel
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'pull_request'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install

      - name: Install Vercel CLI
        run: npm install --global vercel@latest

      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}

      - name: Build Project Artifacts
        run: vercel build --token=${{ secrets.VERCEL_TOKEN }}
        env:
          TURBO_TOKEN: ""
          TURBO_TEAM: ""

      - name: Deploy Project Artifacts to Vercel
        run: vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }}

  notify:
    name: Notify Deployment Status
    runs-on: ubuntu-latest
    needs: [test, deploy]
    if: always() && github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
      - name: Notify deployment success
        if: needs.test.result == 'success' && needs.deploy.result == 'success'
        run: |
          echo "‚úÖ Web app deployed successfully to Vercel!"
          echo "üöÄ Production deployment completed"
          echo "üåê Check your Vercel dashboard for the live URL"

      - name: Notify failure
        if: needs.test.result == 'failure' || needs.deploy.result == 'failure'
        run: |
          echo "‚ùå Web app deployment failed!"
          echo "Check the logs above for more details."
          if [ "${{ needs.test.result }}" == "failure" ]; then
            echo "‚ùå Test stage failed"
          fi
          if [ "${{ needs.deploy.result }}" == "failure" ]; then
            echo "‚ùå Deploy stage failed"
          fi
